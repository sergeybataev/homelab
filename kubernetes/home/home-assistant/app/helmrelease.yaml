# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/all.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  - name: volsync
    namespace: storage
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name": "macvlan-static-net",
                "namespace": "network",
                "ips": ["192.168.5.5/16"]
              }]
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            env:
              INIT_POSTGRES_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: home-assistant-db-secret
                    key: name
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: home-assistant-db-secret
                    key: user
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: home-assistant-db-secret
                    key: password
              INIT_POSTGRES_HOST: ${CLOUDNATIVE_PG_IP}
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: cloudnative-pg-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.3.3
            env:
              TZ: &TZ ${TIMEZONE}
              HASS_EXTERNAL_URL: https://hass.${SECRET_DOMAIN}
              HASS_INTERNAL_URL: https://hass.${SECRET_DOMAIN}
              HASS_TRUSTED_PROXIES: ${NODE_CIDR}
              HASS_HTTP_TRUSTED_PROXY_1: ${NODE_CIDR}
              HASS_HTTP_TRUSTED_PROXY_2: ${CLUSTER_CIDR}
              HOME_ASSISTANT__HACS_INSTALL: "true"
              SERVER_HOST:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              HASS_RECORDER_DB_URL: "postgresql://$(DB_user):$(DB_password)@${CLOUDNATIVE_PG_IP}/home_assistant"
            envFrom: &envFrom
            - prefix: "DB_"
              secretRef:
                name: home-assistant-db-secret
            securityContext: &securityContext
              readOnlyRootFilesystem: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
            ports:
              - containerPort: 5353
                name: mdns-tcp
                protocol: TCP
              - containerPort: 5353
                name: mdns-udp
                protocol: UDP
          codeserver:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.97.2@sha256:6ff0e9cf5a553b3961ece200be75e21e8c887ed0ae28a7c28213722dccf74b0c
            env:
              TZ: *TZ
              PORT: &code-port 18888
            envFrom: *envFrom
            args:
            - "/config"
            - --auth
            - "none"
            - --user-data-dir
            - "/config/.vscode"
            - --extensions-dir
            - "/config/.vscode"
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
            securityContext: &securityContext
              readOnlyRootFilesystem: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
    defaultPodOptions:
      hostname: "k8s-${APP}"
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsNonRoot: false
        runAsGroup: 0
        runAsUser: 0
    service:
      app:
        type: LoadBalancer
        controller: home-assistant
        ports:
          http:
            primary: true
            port: 8123
          bonjour-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
          bonjour-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          codeserver:
            port: *code-port
            # dnla-udp:
            #   enabled: true
            #   port: 1900
            #   protocol: UDP
            #   targetPort: 1900
            #   nodePort: 1900
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
        - host: &host hass.${SECRET_DOMAIN}
          paths:
          - path: /
            service:
              identifier: app
              port: http
        - host: &codeserverHost "hass-code.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: codeserver
        tls:
        - hosts:
          - *host
          - *codeserverHost

    persistence:
      config:
        existingClaim: home-assistant
      # secrets.yaml:
      #   items:
      #   - key: secrets.yaml
      #     path: /config/secrets.yaml
      #   name: home-assistant-secret
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
        - path: /config/tts
      tmp:
        type: emptyDir
      tun-device:
        type: hostPath
        hostPath: /dev/net/tun
        hostPathType: CharDevice
        globalMounts:
          - path: /dev/net/tun
