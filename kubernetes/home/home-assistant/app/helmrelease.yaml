# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/all.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name": "macvlan-static-net",
                "namespace": "network",
                "mac": "f2:12:dc:25:ff:46",
                "ips": ["${HASS_POD_IP}/16"]
              }]

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom: &envFrom
              - secretRef:
                  name: &db_creds ${PG_MAIN_CREDS}
              - secretRef:
                  name: &db_secrets ${PG_SECRET}

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.7.3
            env:
              TZ: &TZ ${TIMEZONE}
              HASS_EXTERNAL_URL: https://hass.${SECRET_DOMAIN}
              HASS_INTERNAL_URL: "https://${HASS_IP}"
              HASS_TRUSTED_PROXIES: ${NODE_CIDR}
              HASS_HTTP_TRUSTED_PROXY_1: ${NODE_CIDR}
              HASS_HTTP_TRUSTED_PROXY_2: ${CLUSTER_CIDR}
              HOME_ASSISTANT__HACS_INSTALL: "true"
              SERVER_HOST:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              HASS_RECORDER_DB_URL: "postgresql://${PG_USER}:$(DB_password)@${INIT_POSTGRES_HOST}/${PG_NAME}"
            envFrom: &envFrom
            - prefix: "DB_"
              secretRef:
                name: *db_secrets
            - secretRef:
                name: *db_creds
            securityContext: &securityContext
              readOnlyRootFilesystem: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
            ports:
              - containerPort: 5353
                name: mdns-tcp
                protocol: TCP
              - containerPort: 5353
                name: mdns-udp
                protocol: UDP
          codeserver:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.102.2@sha256:8c2aaafb74a2978f48d193135eb3ea6fc0e24563dd59c028b9f1808cefd0fa33
            env:
              TZ: *TZ
              PORT: &code-port 18888
            envFrom: *envFrom
            args:
            - "/config"
            - --auth
            - "none"
            - --user-data-dir
            - "/config/.vscode"
            - --extensions-dir
            - "/config/.vscode"
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
            securityContext: &securityContext
              readOnlyRootFilesystem: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
    defaultPodOptions:
      hostname: "k8s-${APP}"
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        annotations:
          io.cilium/lb-ipam-ips: ${HASS_IP}
        type: LoadBalancer
        controller: *app
        ports:
          http:
            primary: true
            port: 8123
          bonjour-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
          bonjour-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          codeserver:
            port: *code-port
            # dnla-udp:
            #   enabled: true
            #   port: 1900
            #   protocol: UDP
            #   targetPort: 1900
            #   nodePort: 1900
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
        - host: &host hass.${SECRET_DOMAIN}
          paths:
          - path: /
            service:
              identifier: app
              port: http
        - host: &codeserverHost "hass-code.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: codeserver
        tls:
        - hosts:
          - *host
          - *codeserverHost

    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM:-${APP}}"
      # secrets.yaml:
      #   items:
      #   - key: secrets.yaml
      #     path: /config/secrets.yaml
      #   name: home-assistant-secret
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
        - path: /config/tts
      tmp:
        type: emptyDir

    serviceMonitor:
      app:
        serviceName: *app
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            interval: 1m
            scrapeTimeout: 30s
