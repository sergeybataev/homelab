apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &app rook-direct-mount
  namespace: rook-ceph
  labels:
    app.kubernetes.io/name: *app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *app
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: rook-direct-mount
          image: rook/ceph:v1.17.4
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash"]
          args: ["-m", "-c", "/usr/local/bin/toolbox.sh"]
          tty: true
          env:
            - name: ROOK_CEPH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-mon
                  key: ceph-username
            - name: ROOK_CEPH_SECRET
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-mon
                  key: ceph-secret
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - mountPath: /dev
              name: dev
            - mountPath: /sys/bus
              name: sysbus
            - mountPath: /lib/modules
              name: libmodules
            - name: mon-endpoint-volume
              mountPath: /etc/rook
            - mountPath: /etc/ceph/admin-keyring-store/
              name: rook-ceph-admin-keyring
              readOnly: true
              recursiveReadOnly: Disabled
      hostNetwork: true
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: sysbus
          hostPath:
            path: /sys/bus
        - name: libmodules
          hostPath:
            path: /lib/modules
        - name: mon-endpoint-volume
          configMap:
            name: rook-ceph-mon-endpoints
            items:
              - key: data
                path: mon-endpoints
        - name: rook-ceph-admin-keyring
          secret:
            defaultMode: 420
            secretName: rook-ceph-admin-keyring
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  # Ensure only nodes meant for Ceph components get selected
                  # Use a generic label or specific ones per role
                  - key: ceph.rook.io/cluster
                    operator: In
                    values:
                      - "enabled"
                  - key: node-role.kubernetes.io/storage-node # Label specific to your main storage node(s)
                    operator: Exists

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: rook-direct-mount
#   namespace: rook-ceph
#   labels:
#     app: rook-direct-mount
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: rook-direct-mount
#   template:
#     metadata:
#       labels:
#         app: rook-direct-mount
#     spec:
#       dnsPolicy: ClusterFirstWithHostNet
#       containers:
#         - name: rook-direct-mount
#           image: rook/ceph:v1.16.5
#           imagePullPolicy: IfNotPresent
#           command: ["/bin/bash"]
#           args: ["-m", "-c", "/usr/local/bin/toolbox.sh"]
#           tty: true
#           env:
#             - name: ROOK_CEPH_USERNAME
#               valueFrom:
#                 secretKeyRef:
#                   name: rook-ceph-mon
#                   key: ceph-username
#             - name: ROOK_CEPH_SECRET
#               valueFrom:
#                 secretKeyRef:
#                   name: rook-ceph-mon
#                   key: ceph-secret
#           securityContext:
#             privileged: true
#             runAsUser: 0
#           volumeMounts:
#             - mountPath: /dev
#               name: dev
#             - mountPath: /sys/bus
#               name: sysbus
#             - mountPath: /lib/modules
#               name: libmodules
#             - name: mon-endpoint-volume
#               mountPath: /etc/rook
#       hostNetwork: true
#       volumes:
#         - name: dev
#           hostPath:
#             path: /dev
#         - name: sysbus
#           hostPath:
#             path: /sys/bus
#         - name: libmodules
#           hostPath:
#             path: /lib/modules
#         - name: mon-endpoint-volume
#           configMap:
#             name: rook-ceph-mon-endpoints
#             items:
#               - key: data
#                 path: mon-endpoints
