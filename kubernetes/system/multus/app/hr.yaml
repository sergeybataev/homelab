---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/all.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: multus
  namespace: network
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  values:
    configMaps:
      daemon-config:
        data:
          daemon-config.json: |
            {
              "cniVersion": "0.3.1",
              "logToStderr": true,
              "logLevel": "error",
              "binDir": "/opt/cni/bin",
              "chrootDir": "/hostroot",
              "cniConfigDir": "/host/etc/cni/net.d",
              "confDir": "/host/etc/cni/net.d",
              "multusAutoconfigDir": "/host/etc/cni/net.d",
              "multusConfigFile": "auto",
              "socketDir": "/host/run/multus/",
              "delegates": [
                {
                  "cniVersion": "0.3.1",
                  "name": "cilium",
                  "plugins": [
                    {
                      "type": "cilium-cni",
                      "log-file": "/var/run/cilium/cilium-cni.log"
                    },
                    {
                      "type": "loopback"
                    }
                  ]
                }
              ]
            }
    controllers:
      uninstall:
        type: job

        annotations:
          # This is what defines this resource as a hook. Without this line, the
          # job is considered part of the release.
          helm.sh/hook: pre-delete, pre-upgrade
          helm.sh/hook-weight: "-5"
          helm.sh/hook-delete-policy: hook-succeeded

        pod:
          hostNetwork: true

        containers:
          uninstall:
            image:
              repository: docker.io/library/alpine
              tag: "3.21"

            command:
              - /bin/sh
              - -c

                # # Remove VLAN interfaces
                # echo "Removing VLAN interfaces..."
                # ip link delete eth0.10 || echo "eth0.10 not found"
                # ip link delete eth0.20 || echo "eth0.20 not found"
                # ip link delete eth0.30 || echo "eth0.30 not found"


                # # Remove the bridge
                # echo "Removing bridge..."
                # ip link set br0 down || echo "br0 not found"
                # ip link delete br0 || echo "br0 not found"

                # # Stop LLDP process if it's running
                # echo "Stopping LLDP process..."
                # pkill lldpd || echo "lldpd not running"
                # rm -rf /var/run/lldpd.socket
            args:
              - |
                set -x
                # Remove Multus configurations
                rm -rf /host/etc/cni/net.d/*multus*
                rm -rf /host/opt/cni/bin/*multus*

      multus:
        type: daemonset

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          hostNetwork: true
          hostPID: true

        containers:
          multus-daemon:
            image: &image
              repository: ghcr.io/k8snetworkplumbingwg/multus-cni
              tag: stable-thick
            env:
              MULTUS_NODE_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            resources:
              requests:
                cpu: "5m"
                memory: "96Mi"
            securityContext:
              privileged: true

        initContainers:
          # create-vlan-interface:
          #   image:
          #     repository: alpine/git
          #     tag: latest
          #       # # Check if eth0.10 already exists
          #       # if ! ip link show eth0.10 > /dev/null 2>&1; then
          #       #   ip link add link eth0 name eth0.10 type vlan id 1;
          #       #   ip link set eth0.10 up;
          #       # else
          #       #   echo "VLAN interface eth0.10 already exists";
          #       # fi
          #   command:
          #     - /bin/sh
          #     - -c
          #     - |
          #       # Create VLAN Interfaces on eth0
          #       echo "Creating VLAN interfaces..."
          #       ip link add link eth0 name eth0.10 type vlan id 10
          #       ip link add link eth0 name eth0.20 type vlan id 20
          #       ip link add link eth0 name eth0.30 type vlan id 30

          #       ip link show

          #       # Bring up the VLAN interfaces
          #       ip link set eth0.10 up
          #       ip link set eth0.20 up
          #       ip link set eth0.30 up

          #       # Create a bridge and add VLAN interfaces
          #       echo "Creating bridge and adding VLAN interfaces..."
          #       ip link add name br0 type bridge
          #       ip link set eth0.10 master br0
          #       ip link set eth0.20 master br0
          #       ip link set eth0.30 master br0
          #       ip link set br0 up

          #       # Install LLDP and configure LLDP to advertise on bridge and VLAN interfaces
          #       echo "Installing and configuring LLDP..."
          #       apk update
          #       apk add --no-cache lldpd
          #       lldpd -I br0,eth0.10,eth0.20,eth0.30
          #       lldpcli show neighbors
          #   securityContext:
          #     privileged: true
          cni-plugins-installer:
            image:
              repository: ghcr.io/skyssolutions/cni-plugins
              tag: 1.6.2
            resources:
              requests:
                cpu: "10m"
                memory: "15Mi"
            securityContext:
              capabilities:
                drop:
                  - ALL
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError

          multus-shim-installer:
            image: *image
            command:
              - /bin/sh
              - -c
            args: |
              set -x
              cp -f /usr/src/multus-cni/bin/multus-shim /host/opt/cni/bin/multus-shim
            resources:
              requests:
                cpu: "10m"
                memory: "15Mi"
            securityContext:
              capabilities:
                drop:
                  - ALL
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError

    persistence:
      cni:
        type: hostPath
        hostPath: /etc/cni/net.d
        advancedMounts:
          uninstall:
            uninstall:
              - path: /host/etc/cni/net.d
          multus:
            multus-daemon:
              - path: /host/etc/cni/net.d

      cnibin:
        type: hostPath
        hostPath: /opt/cni/bin
        advancedMounts:
          uninstall:
            uninstall:
              - path: /host/opt/cni/bin
          multus:
            cni-plugins-installer:
              - path: /host/opt/cni/bin
            multus-shim-installer:
              - path: /host/opt/cni/bin
            multus-daemon:
              # multus-daemon expects that cnibin path must be identical between pod and container host.
              # e.g. if the cni bin is in '/opt/cni/bin' on the container host side, then it should be
              # mount to '/opt/cni/bin' in multus-daemon, not to any other directory, like '/opt/bin' or
              # '/usr/bin'.
              - path: /opt/cni/bin

      config:
        type: configMap
        name: multus-daemon-config
        advancedMounts:
          multus:
            multus-daemon:
              - path: /etc/cni/net.d/multus.d
      hostroot:
        type: hostPath
        hostPath: /
        advancedMounts:
          multus:
            multus-daemon:
              - path: /hostroot
                mountPropagation: HostToContainer
      host-run:
        type: hostPath
        hostPath: /run
        advancedMounts:
          multus:
            multus-daemon:
              - path: /host/run
      host-var-lib-cni-multus:
        type: hostPath
        hostPath: /var/lib/cni/multus
        advancedMounts:
          multus:
            multus-daemon:
              - path: /var/lib/cni/multus
      host-var-lib-kubelet:
        type: hostPath
        hostPath: /var/lib/kubelet
        advancedMounts:
          multus:
            multus-daemon:
              - path: /var/lib/kubelet
      host-run-k8s-cni-cncf-io:
        type: hostPath
        hostPath: /run/k8s.cni.cncf.io
        advancedMounts:
          multus:
            multus-daemon:
              - path: /run/k8s.cni.cncf.io
      host-run-netns:
        type: hostPath
        hostPath: /var/run/netns/
        advancedMounts:
          multus:
            multus-daemon:
              - path: /run/netns/
                mountPropagation: HostToContainer

    serviceAccount:
      create: true
